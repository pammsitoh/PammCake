const AddonBehavior = require("./AddonBehavior.js");
const colors = require("colors");
const AddonResource = require("./AddonResource.js");
const BasicItem_TEMPLATE = require("./TemplateManager/items/BasicItem.js");
const EasyMaker = require("./Easy/EasyMaker.js");

class AddonManager {
    #resources
    #behaviors

    /** 
     * @param {String} path
     * @description Manage Addon Files More Effectively.
     */
    constructor( path ) {
        this.path = path;
        this.#resources = new AddonResource(this);
        this.#behaviors = new AddonBehavior(this);
        this.easyMaker = new EasyMaker(this);
        this.config = {
            loggerEnabled: true,
        };
    }

    /**
     * @param {String} message
     * @description Show message...
     */
    log( message ) {
        if(!this.config.loggerEnabled) return;
        console.log("[Gumaddon]".bgMagenta + ": ".bgWhite + ` ${message}`.cyan);
    }

    success( message ) {
        if(!this.config.loggerEnabled) return;
        console.log("[Gumaddon]".bgGreen + ": ".bgWhite + `${message}`.green);
    }

    error( message, errorpath ) {
        if(!this.config.loggerEnabled) return;
        console.log("[Gumaddon]".bgYellow + "[ERROR]".bgRed + ": ".bgWhite + ` ${message}`.cyan);
        if(errorpath == null || undefined) return;
        console.log("[Gumaddon] ErrorPath :".white + ` ${errorpath}`.red); 
    }

    /**
     * @description Create a new addon... This can reset your manifest addon files.
     */
    setup() {
        this.#behaviors.setup();
        this.#resources.setup();
    }

    /** @returns {AddonResource} */
    getResources() {
        return this.#resources;
    }

    /** @returns {AddonBehavior} */
    getBehavior() {
        return this.#behaviors;
    }
}

module.exports = AddonManager;