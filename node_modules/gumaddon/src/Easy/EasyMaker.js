const BasicItem_TEMPLATE = require("../TemplateManager/items/BasicItem.js");

class EasyMaker {
    #manager
    constructor( manager ){
        this.#manager = manager;
    }

    /**
     * 
     * @param {String} identifier 
     * @param {Object} template 
     * @description Adds a new entity based on the given template.
     */
    addEntityFromTemplate(identifier ,template) {
        let server_ent = template.server;
        let client_ent = template.client;
        server_ent["minecraft:entity"].description.identifier = identifier;
        client_ent["minecraft:client_entity"].description.identifier = identifier;
        // Create Files...
        this.#manager.getBehavior().create(`entities/${identifier.replace(":","_")}.server.json`, JSON.stringify(server_ent, null, 4));
        this.#manager.getResources().create(`entity/${identifier.replace(":","_")}.client.json`, JSON.stringify(client_ent, null, 4));
        this.#manager.success("√ Entity from template Added!");
    }
    
    /**
     * 
     * @param {String} identifier 
     * @param {String} iconName
     * @description Adds a new basic item. 
     */
    addBasicItem(identifier, iconName) {
        let itemData = BasicItem_TEMPLATE;
        itemData.server["minecraft:item"].description.identifier = identifier;
        itemData.client["minecraft:item"].description.identifier = identifier;
        itemData.client["minecraft:item"].components["minecraft:icon"] = iconName;

        this.#manager.getBehavior().create(`items/${identifier.replace(":","_")}.item.json`, JSON.stringify(itemData.server, null, 4));
        this.#manager.getResources().create(`items/${identifier.replace(":","_")}.client_item.json`, JSON.stringify(itemData.client, null, 4));
        this.#manager.success("√ Basic Item Added!");
    }

    /**
     * 
     * @param {String} identifier 
     * @param {String} texture
     * @description Adds a new basic block. 
     */
    addUnitBlock(identifier, texture) {}

    /**
     * 
     * @param {String} git_repo
     * @description Adds a module to the scripts at gum_modules.
     */
    addModule(git_repo) {
        // code here...
    }
}

module.exports = EasyMaker;